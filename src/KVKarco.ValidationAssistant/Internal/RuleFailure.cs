using System.Text;

namespace KVKarco.ValidationAssistant.Internal;

/// <summary>
/// Represents the abstract base class for different types of rule failures encountered during validation.
/// This class provides common properties for identifying the failed rule, its context (path),
/// and a high-level explanation. It also defines abstract members for managing specific validation failures
/// that might be associated with a rule.
/// </summary>
internal abstract class RuleFailure
{
    /// <summary>
    /// Initializes a new instance of the <see cref="RuleFailure"/> class.
    /// </summary>
    /// <param name="path">The property path associated with this rule failure (can be empty for non-property specific rules).</param>
    /// <param name="info">Metadata and configuration details for this rule failure.</param>
    /// <param name="explanation">A high-level textual explanation of why the rule failed.</param>
    protected RuleFailure(string path, RuleFailureInfo info, string explanation)
    {
        Path = path;
        Info = info;
        Explanation = explanation;
    }

    /// <summary>
    /// Gets the property path related to where this rule failure occurred.
    /// For non-property specific rules (e.g., logical rules), this might be an empty string.
    /// </summary>
    public string Path { get; }

    /// <summary>
    /// Gets the <see cref="RuleFailureInfo"/> containing metadata and configuration
    /// for this specific rule failure.
    /// </summary>
    public RuleFailureInfo Info { get; }

    /// <summary>
    /// Gets a high-level textual explanation of why the rule failed.
    /// This explanation is typically generated by the rule itself.
    /// </summary>
    public string Explanation { get; }

    /// <summary>
    /// Gets a value indicating whether this rule failure contains any more granular <see cref="ValidationFailure"/> instances.
    /// Derived classes must implement this to specify if they track specific validation issues.
    /// </summary>
    public abstract bool HasValidationFailures { get; }

    /// <summary>
    /// Gets a read-only collection of <see cref="ValidationFailure"/> instances associated with this rule failure.
    /// Derived classes must implement this. For rule failures that don't track specific validation failures,
    /// this might throw <see cref="NotImplementedException"/> or return an empty collection.
    /// </summary>
    public abstract IReadOnlyCollection<ValidationFailure> ValidationFailures { get; }

    /// <summary>
    /// Gets a read-only collection of error messages from the <see cref="ValidationFailure"/> instances
    /// associated with this rule failure.
    /// Derived classes must implement this. For rule failures that don't track specific validation failures,
    /// this might throw <see cref="NotImplementedException"/> or return an empty collection.
    /// </summary>
    public abstract IReadOnlyCollection<string> ValidationFailuresMessages { get; }

    /// <summary>
    /// Adds a <see cref="ValidationFailure"/> to this rule failure.
    /// Derived classes must implement this to define how granular validation failures are collected.
    /// </summary>
    /// <param name="failure">The <see cref="ValidationFailure"/> to add.</param>
    public abstract void AddValidationFailure(ValidationFailure failure);

    /// <summary>
    /// Appends a formatted explanation of this rule failure to the provided <see cref="StringBuilder"/>.
    /// Derived classes must implement this to provide specific formatting for their type of failure.
    /// </summary>
    /// <param name="sb">The <see cref="StringBuilder"/> to which the explanation will be appended.</param>
    public abstract void AttachToExplanation(StringBuilder sb);
}
